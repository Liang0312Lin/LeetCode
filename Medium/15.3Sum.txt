// 三個不同位置的數總合為0
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
	vector<vector<int>> ans;
        int len = nums.size();
	if(len < 3)
	        return ans;
	// 先進行排序避免重複元素
        sort(nums.begin(), nums.end());
	// 把第一個位置的數字固定，另外兩個從頭+1和尾開始檢查
        for(int i = 0; i < len - 2; i++){
	    // 檢查是否重複元素
            if(i > 0 && nums[i] == nums[i - 1])
                continue;
            int j = i + 1;
            int k = len -1;
            while(j < k){
                int sum = nums[i] + nums[j] + nums[k];
                if(sum < 0)
                    j++;
                else if(sum > 0)
                    k--;
                else{
                    ans.push_back({nums[i],nums[j],nums[k]});
                    j++;
                    k--;
		    // 檢查是否重複元素
                    while(j < k && nums[j] == nums[j-1])
                        j++;
                    while(j < k && nums[k] == nums[k+1])
                        k--;
                }
            }
        }
        return ans;
    }
};